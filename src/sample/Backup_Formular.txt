package sample;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class Main extends Application {

    FileWriter writer;
    File data = new File("data.txt");

    // public void saveData(String vorname, String nachname) {
    //     try {
    //         writer = new FileWriter(data, false);
    //         writer.write("Test");
    //         // writer.write(System.getProperty("line.seperator"));
    //         // Aus irgendeinem Grund funktioniert die Zeile nicht.
    //
    //         writer.flush();
    //         writer.close();
    //     } catch(IOException e) {
    //         e.printStackTrace();
    //     }
    // }
    // Diese Methode soll in die Datei data.txt den Vor- und Nachnamen reinschreiben. Aber irgendwie funktioniert das nicht.

    @Override
    public void start(Stage primaryStage) {

        primaryStage.setTitle("Formular");

        GridPane grid = new GridPane();
        grid.setAlignment(Pos.CENTER);
        grid.setHgap(10);
        grid.setVgap(10);
        grid.setPadding(new Insets(10, 10, 10, 10));

        Text titel = new Text("Herzlich Willkommen!");
        titel.setFont(Font.font("Arial", FontWeight.BOLD, 20));
        grid.add(titel, 0, 0, 2, 1);



        Label vorname = new Label("Vorname:");
        grid.add(vorname, 0, 1);

        TextField eingabeVorname = new TextField();
        grid.add(eingabeVorname, 1, 1);

        Label nachname = new Label("Nachname:");
        grid.add(nachname, 0, 2);

        TextField eingabeNachname = new TextField();
        grid.add(eingabeNachname, 1, 2);

        Button btn = new Button("Anmelden");
        grid.add(btn, 0, 4);

        Text ziel = new Text();
        grid.add(ziel, 0, 6, 2, 1);

        btn.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent e) {
                String vorname = eingabeVorname.getText();
                String nachname = eingabeNachname.getText();
                String name;
                if((vorname == "" || vorname.startsWith(" ")) && (nachname != "" || nachname.startsWith(" "))) {
                    name = nachname;
                } else if((nachname == "" || nachname.startsWith(" ")) && (vorname != "" || vorname.startsWith(" "))) {
                    name = vorname;
                } else {
                    name = vorname + " " + nachname;
                }
                // Hier wird geprüft, ob ein Textfeld leer ist (oder beide), um dann nur einen der Namen zu verwenden oder, ob keins ausgefüllt ist, um den Nutzer zu informieren, dass er/sie sich ohne Namen nicht anmelden kann.

                // saveData(vorname, nachname); siehe oben Methode saveData
                if(name == "") {
                    ziel.setText("Ohne einen Namen anzugeben, können sie sich nicht anmelden.");
                } else {
                    ziel.setText("Sie sind angemeldet, " + name + "!");
                }
            }
        });

        Scene scene = new Scene(grid, 400, 300);
        primaryStage.setMinWidth(400);
        primaryStage.setMinHeight(328); // Anscheinend muss man hier immer 28 Pixel mehr angeben, um auf die richtige Größe zu kommen.
        primaryStage.setScene(scene);
        primaryStage.show();

    }

    public static void main(String[] args) {

        launch(args);

    }

}
